generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  password     String      // Hashed with bcrypt
  role         Role        @default(TRAFFIC_ENFORCER)
  actions      Action[]    // For audit logging
  createdViolations Violation[] @relation("CreatedViolations") // Opposite relation for Violation.creator
  updatedPayments   Payment[]   @relation("UpdatedPayments")   // Opposite relation for Payment.updater
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Vehicle {
  id            Int            @id @default(autoincrement())
  plateNumber   String         @unique
  vehicleType   VehicleType
  violations    Violation[]
}

model Violation {
  id            Int         @id @default(autoincrement())
  vehicleId     Int
  vehicle       Vehicle     @relation(fields: [vehicleId], references: [id])
  violationType ViolationType
  dateTime      DateTime
  fineAmount    Float
  status        Status      @default(UNPAID)
  payments      Payment[]
  createdBy     Int
  creator       User        @relation("CreatedViolations", fields: [createdBy], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Payment {
  id          Int       @id @default(autoincrement())
  violationId Int
  violation   Violation @relation(fields: [violationId], references: [id])
  amount      Float
  dateTime    DateTime  @default(now())
  updatedBy   Int
  updater     User      @relation("UpdatedPayments", fields: [updatedBy], references: [id])
}

model Action {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String   // e.g., "LOGIN", "CREATE_VIOLATION"
  timestamp DateTime @default(now())
}

enum Role {
  ADMIN
  TRAFFIC_ENFORCER
}

enum VehicleType {
  MULTICAB
  VAN
}

enum ViolationType {
  TERMINAL_FEE
}

enum Status {
  UNPAID
  PARTIALLY_PAID
  PAID
}